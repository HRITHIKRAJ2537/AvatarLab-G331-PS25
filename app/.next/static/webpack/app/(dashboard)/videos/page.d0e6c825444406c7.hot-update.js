"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/(dashboard)/videos/page",{

/***/ "(app-pages-browser)/./lib/authenticate.ts":
/*!*****************************!*\
  !*** ./lib/authenticate.ts ***!
  \*****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getEmail: () => (/* binding */ getEmail),\n/* harmony export */   getUserId: () => (/* binding */ getUserId)\n/* harmony export */ });\n/* harmony import */ var cookie__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! cookie */ \"(app-pages-browser)/./node_modules/cookie/dist/index.js\");\n/* harmony import */ var jwt_decode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! jwt-decode */ \"(app-pages-browser)/./node_modules/jwt-decode/build/esm/index.js\");\n// import { parse } from 'cookie'\n// import {jwtDecode} from \"jwt-decode\";\n// import { NextRequest } from 'next/server';\n// export const getEmail = () => {\n//   console.log(document.cookie)\n//   const cookie = parse(document.cookie);\n//   const token = cookie.token;\n//   console.log(token)\n//   if (!token) return null;\n//   try {\n//     const decoded = jwtDecode(token) as { email: string,username:string,image:string };\n//     console.log(decoded)\n//     return {email:decoded.email,username:decoded.username,image:decoded.image};\n//   } catch {\n//     return null;\n//   }\n// };\n// export const getUserId = (request?: NextRequest): string | null => {\n//   let token: string | undefined;\n//   if (typeof window !== \"undefined\") {\n//     console.log(\"getUserId called (client-side), cookies:\");\n//     const cookie = parse(document.cookie);\n//     token = cookie.token;\n//   } else if (request) {\n//     console.log(\"getUserId called (server-side), cookies:\");\n//     const cookieHeader = request.headers.get(\"cookie\");\n//     const cookie = cookieHeader ? parse(cookieHeader) : {};\n//     token = cookie.token;\n//   } else {\n//     console.log(\"getUserId called (server-side), no request object provided\");\n//     return null;\n//   }\n//   if (!token) {\n//     console.log(\"No token found\");\n//     return null;\n//   }\n//   try {\n//     // In a real app, you would verify the token (e.g., decode JWT)\n//     // For this example, assume the token is the userIdentifier\n//     const userIdentifier = token; // Simplified; replace with actual token parsing/verification\n//     return userIdentifier;\n//   } catch (error) {\n//     console.error(\"Error parsing token:\", error);\n//     return null;\n//   }\n// };\n\n\nconst getEmail = ()=>{\n    if (false) {}\n    console.log(\"getEmail called (client-side), cookies:\", document.cookie);\n    const cookie = (0,cookie__WEBPACK_IMPORTED_MODULE_0__.parse)(document.cookie);\n    const token = cookie.token;\n    console.log(\"Token:\", token);\n    if (!token) return null;\n    try {\n        const decoded = (0,jwt_decode__WEBPACK_IMPORTED_MODULE_1__.jwtDecode)(token);\n        console.log(\"Decoded token:\", decoded);\n        return {\n            email: decoded.email,\n            username: decoded.username,\n            userId: decoded.userId,\n            image: decoded.image\n        };\n    } catch (error) {\n        console.error(\"Error decoding token in getEmail:\", error);\n        return null;\n    }\n};\nconst getUserId = (request)=>{\n    let token;\n    if (true) {\n        console.log(\"getUserId called (client-side), cookies:\");\n        const cookie = (0,cookie__WEBPACK_IMPORTED_MODULE_0__.parse)(document.cookie);\n        token = cookie.token;\n    } else {}\n    if (!token) {\n        console.log(\"No token found\");\n        return null;\n    }\n    try {\n        const decoded = (0,jwt_decode__WEBPACK_IMPORTED_MODULE_1__.jwtDecode)(token);\n        console.log(\"Decoded token:\", decoded);\n        return decoded.userId; // Return the userId from the JWT payload\n    } catch (error) {\n        console.error(\"Error decoding token in getUserId:\", error);\n        return null;\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2xpYi9hdXRoZW50aWNhdGUudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBLGlDQUFpQztBQUNqQyx3Q0FBd0M7QUFDeEMsNkNBQTZDO0FBRTdDLGtDQUFrQztBQUNsQyxpQ0FBaUM7QUFDakMsMkNBQTJDO0FBQzNDLGdDQUFnQztBQUNoQyx1QkFBdUI7QUFDdkIsNkJBQTZCO0FBRTdCLFVBQVU7QUFDViwwRkFBMEY7QUFDMUYsMkJBQTJCO0FBQzNCLGtGQUFrRjtBQUNsRixjQUFjO0FBQ2QsbUJBQW1CO0FBQ25CLE1BQU07QUFDTixLQUFLO0FBRUwsdUVBQXVFO0FBQ3ZFLG1DQUFtQztBQUVuQyx5Q0FBeUM7QUFDekMsK0RBQStEO0FBQy9ELDZDQUE2QztBQUM3Qyw0QkFBNEI7QUFDNUIsMEJBQTBCO0FBQzFCLCtEQUErRDtBQUMvRCwwREFBMEQ7QUFDMUQsOERBQThEO0FBQzlELDRCQUE0QjtBQUM1QixhQUFhO0FBQ2IsaUZBQWlGO0FBQ2pGLG1CQUFtQjtBQUNuQixNQUFNO0FBR04sa0JBQWtCO0FBQ2xCLHFDQUFxQztBQUNyQyxtQkFBbUI7QUFDbkIsTUFBTTtBQUVOLFVBQVU7QUFDVixzRUFBc0U7QUFDdEUsa0VBQWtFO0FBQ2xFLGtHQUFrRztBQUNsRyw2QkFBNkI7QUFDN0Isc0JBQXNCO0FBQ3RCLG9EQUFvRDtBQUNwRCxtQkFBbUI7QUFDbkIsTUFBTTtBQUNOLEtBQUs7QUFHMEI7QUFDUTtBQVloQyxNQUFNRSxXQUFXO0lBQ3RCLElBQUksS0FBNkIsRUFBRSxFQUdsQztJQUVEQyxRQUFRQyxHQUFHLENBQUMsMkNBQTJDQyxTQUFTQyxNQUFNO0lBQ3RFLE1BQU1BLFNBQVNOLDZDQUFLQSxDQUFDSyxTQUFTQyxNQUFNO0lBQ3BDLE1BQU1DLFFBQVFELE9BQU9DLEtBQUs7SUFDMUJKLFFBQVFDLEdBQUcsQ0FBQyxVQUFVRztJQUV0QixJQUFJLENBQUNBLE9BQU8sT0FBTztJQUVuQixJQUFJO1FBQ0YsTUFBTUMsVUFBVVAscURBQVNBLENBQWVNO1FBQ3hDSixRQUFRQyxHQUFHLENBQUMsa0JBQWtCSTtRQUM5QixPQUFPO1lBQ0xDLE9BQU9ELFFBQVFDLEtBQUs7WUFDcEJDLFVBQVVGLFFBQVFFLFFBQVE7WUFDMUJDLFFBQVFILFFBQVFHLE1BQU07WUFDdEJDLE9BQU9KLFFBQVFJLEtBQUs7UUFDdEI7SUFDRixFQUFFLE9BQU9DLE9BQU87UUFDZFYsUUFBUVUsS0FBSyxDQUFDLHFDQUFxQ0E7UUFDbkQsT0FBTztJQUNUO0FBQ0YsRUFBRTtBQUVLLE1BQU1DLFlBQVksQ0FBQ0M7SUFDeEIsSUFBSVI7SUFFSixJQUFJLElBQTZCLEVBQUU7UUFDakNKLFFBQVFDLEdBQUcsQ0FBQztRQUNaLE1BQU1FLFNBQVNOLDZDQUFLQSxDQUFDSyxTQUFTQyxNQUFNO1FBQ3BDQyxRQUFRRCxPQUFPQyxLQUFLO0lBQ3RCLE9BQU8sRUFRTjtJQUVELElBQUksQ0FBQ0EsT0FBTztRQUNWSixRQUFRQyxHQUFHLENBQUM7UUFDWixPQUFPO0lBQ1Q7SUFFQSxJQUFJO1FBQ0YsTUFBTUksVUFBVVAscURBQVNBLENBQWVNO1FBQ3hDSixRQUFRQyxHQUFHLENBQUMsa0JBQWtCSTtRQUM5QixPQUFPQSxRQUFRRyxNQUFNLEVBQUUseUNBQXlDO0lBQ2xFLEVBQUUsT0FBT0UsT0FBTztRQUNkVixRQUFRVSxLQUFLLENBQUMsc0NBQXNDQTtRQUNwRCxPQUFPO0lBQ1Q7QUFDRixFQUFFIiwic291cmNlcyI6WyIvaG9tZS92dnIvUFJPSkVDVC9BdmF0YXJMYWItRzMzMS1QUzI1X18vbGliL2F1dGhlbnRpY2F0ZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBpbXBvcnQgeyBwYXJzZSB9IGZyb20gJ2Nvb2tpZSdcclxuLy8gaW1wb3J0IHtqd3REZWNvZGV9IGZyb20gXCJqd3QtZGVjb2RlXCI7XHJcbi8vIGltcG9ydCB7IE5leHRSZXF1ZXN0IH0gZnJvbSAnbmV4dC9zZXJ2ZXInO1xyXG5cclxuLy8gZXhwb3J0IGNvbnN0IGdldEVtYWlsID0gKCkgPT4ge1xyXG4vLyAgIGNvbnNvbGUubG9nKGRvY3VtZW50LmNvb2tpZSlcclxuLy8gICBjb25zdCBjb29raWUgPSBwYXJzZShkb2N1bWVudC5jb29raWUpO1xyXG4vLyAgIGNvbnN0IHRva2VuID0gY29va2llLnRva2VuO1xyXG4vLyAgIGNvbnNvbGUubG9nKHRva2VuKVxyXG4vLyAgIGlmICghdG9rZW4pIHJldHVybiBudWxsO1xyXG5cclxuLy8gICB0cnkge1xyXG4vLyAgICAgY29uc3QgZGVjb2RlZCA9IGp3dERlY29kZSh0b2tlbikgYXMgeyBlbWFpbDogc3RyaW5nLHVzZXJuYW1lOnN0cmluZyxpbWFnZTpzdHJpbmcgfTtcclxuLy8gICAgIGNvbnNvbGUubG9nKGRlY29kZWQpXHJcbi8vICAgICByZXR1cm4ge2VtYWlsOmRlY29kZWQuZW1haWwsdXNlcm5hbWU6ZGVjb2RlZC51c2VybmFtZSxpbWFnZTpkZWNvZGVkLmltYWdlfTtcclxuLy8gICB9IGNhdGNoIHtcclxuLy8gICAgIHJldHVybiBudWxsO1xyXG4vLyAgIH1cclxuLy8gfTtcclxuXHJcbi8vIGV4cG9ydCBjb25zdCBnZXRVc2VySWQgPSAocmVxdWVzdD86IE5leHRSZXF1ZXN0KTogc3RyaW5nIHwgbnVsbCA9PiB7XHJcbi8vICAgbGV0IHRva2VuOiBzdHJpbmcgfCB1bmRlZmluZWQ7XHJcblxyXG4vLyAgIGlmICh0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiKSB7XHJcbi8vICAgICBjb25zb2xlLmxvZyhcImdldFVzZXJJZCBjYWxsZWQgKGNsaWVudC1zaWRlKSwgY29va2llczpcIik7XHJcbi8vICAgICBjb25zdCBjb29raWUgPSBwYXJzZShkb2N1bWVudC5jb29raWUpO1xyXG4vLyAgICAgdG9rZW4gPSBjb29raWUudG9rZW47XHJcbi8vICAgfSBlbHNlIGlmIChyZXF1ZXN0KSB7XHJcbi8vICAgICBjb25zb2xlLmxvZyhcImdldFVzZXJJZCBjYWxsZWQgKHNlcnZlci1zaWRlKSwgY29va2llczpcIik7XHJcbi8vICAgICBjb25zdCBjb29raWVIZWFkZXIgPSByZXF1ZXN0LmhlYWRlcnMuZ2V0KFwiY29va2llXCIpO1xyXG4vLyAgICAgY29uc3QgY29va2llID0gY29va2llSGVhZGVyID8gcGFyc2UoY29va2llSGVhZGVyKSA6IHt9O1xyXG4vLyAgICAgdG9rZW4gPSBjb29raWUudG9rZW47XHJcbi8vICAgfSBlbHNlIHtcclxuLy8gICAgIGNvbnNvbGUubG9nKFwiZ2V0VXNlcklkIGNhbGxlZCAoc2VydmVyLXNpZGUpLCBubyByZXF1ZXN0IG9iamVjdCBwcm92aWRlZFwiKTtcclxuLy8gICAgIHJldHVybiBudWxsO1xyXG4vLyAgIH1cclxuXHJcblxyXG4vLyAgIGlmICghdG9rZW4pIHtcclxuLy8gICAgIGNvbnNvbGUubG9nKFwiTm8gdG9rZW4gZm91bmRcIik7XHJcbi8vICAgICByZXR1cm4gbnVsbDtcclxuLy8gICB9XHJcblxyXG4vLyAgIHRyeSB7XHJcbi8vICAgICAvLyBJbiBhIHJlYWwgYXBwLCB5b3Ugd291bGQgdmVyaWZ5IHRoZSB0b2tlbiAoZS5nLiwgZGVjb2RlIEpXVClcclxuLy8gICAgIC8vIEZvciB0aGlzIGV4YW1wbGUsIGFzc3VtZSB0aGUgdG9rZW4gaXMgdGhlIHVzZXJJZGVudGlmaWVyXHJcbi8vICAgICBjb25zdCB1c2VySWRlbnRpZmllciA9IHRva2VuOyAvLyBTaW1wbGlmaWVkOyByZXBsYWNlIHdpdGggYWN0dWFsIHRva2VuIHBhcnNpbmcvdmVyaWZpY2F0aW9uXHJcbi8vICAgICByZXR1cm4gdXNlcklkZW50aWZpZXI7XHJcbi8vICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuLy8gICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvciBwYXJzaW5nIHRva2VuOlwiLCBlcnJvcik7XHJcbi8vICAgICByZXR1cm4gbnVsbDtcclxuLy8gICB9XHJcbi8vIH07XHJcblxyXG5cclxuaW1wb3J0IHsgcGFyc2UgfSBmcm9tICdjb29raWUnO1xyXG5pbXBvcnQgeyBqd3REZWNvZGUgfSBmcm9tIFwiand0LWRlY29kZVwiO1xyXG5pbXBvcnQgeyBOZXh0UmVxdWVzdCB9IGZyb20gJ25leHQvc2VydmVyJztcclxuXHJcbmludGVyZmFjZSBEZWNvZGVkVG9rZW4ge1xyXG4gIGVtYWlsOiBzdHJpbmc7XHJcbiAgdXNlcm5hbWU6IHN0cmluZztcclxuICB1c2VySWQ6IHN0cmluZzsgLy8gT2JqZWN0SWQgZnJvbSBKV1QgcGF5bG9hZFxyXG4gIGltYWdlOiBzdHJpbmc7XHJcbiAgaWF0OiBudW1iZXI7XHJcbiAgZXhwOiBudW1iZXI7XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBnZXRFbWFpbCA9ICgpID0+IHtcclxuICBpZiAodHlwZW9mIHdpbmRvdyA9PT0gXCJ1bmRlZmluZWRcIikge1xyXG4gICAgY29uc29sZS5sb2coXCJnZXRFbWFpbCBjYWxsZWQgKHNlcnZlci1zaWRlKSwgY2Fubm90IGFjY2VzcyBkb2N1bWVudC5jb29raWVcIik7XHJcbiAgICByZXR1cm4gbnVsbDtcclxuICB9XHJcblxyXG4gIGNvbnNvbGUubG9nKFwiZ2V0RW1haWwgY2FsbGVkIChjbGllbnQtc2lkZSksIGNvb2tpZXM6XCIsIGRvY3VtZW50LmNvb2tpZSk7XHJcbiAgY29uc3QgY29va2llID0gcGFyc2UoZG9jdW1lbnQuY29va2llKTtcclxuICBjb25zdCB0b2tlbiA9IGNvb2tpZS50b2tlbjtcclxuICBjb25zb2xlLmxvZyhcIlRva2VuOlwiLCB0b2tlbik7XHJcblxyXG4gIGlmICghdG9rZW4pIHJldHVybiBudWxsO1xyXG5cclxuICB0cnkge1xyXG4gICAgY29uc3QgZGVjb2RlZCA9IGp3dERlY29kZTxEZWNvZGVkVG9rZW4+KHRva2VuKTtcclxuICAgIGNvbnNvbGUubG9nKFwiRGVjb2RlZCB0b2tlbjpcIiwgZGVjb2RlZCk7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICBlbWFpbDogZGVjb2RlZC5lbWFpbCxcclxuICAgICAgdXNlcm5hbWU6IGRlY29kZWQudXNlcm5hbWUsXHJcbiAgICAgIHVzZXJJZDogZGVjb2RlZC51c2VySWQsIFxyXG4gICAgICBpbWFnZTogZGVjb2RlZC5pbWFnZSxcclxuICAgIH07XHJcbiAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvciBkZWNvZGluZyB0b2tlbiBpbiBnZXRFbWFpbDpcIiwgZXJyb3IpO1xyXG4gICAgcmV0dXJuIG51bGw7XHJcbiAgfVxyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IGdldFVzZXJJZCA9IChyZXF1ZXN0PzogTmV4dFJlcXVlc3QpOiBzdHJpbmcgfCBudWxsID0+IHtcclxuICBsZXQgdG9rZW46IHN0cmluZyB8IHVuZGVmaW5lZDtcclxuXHJcbiAgaWYgKHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIpIHtcclxuICAgIGNvbnNvbGUubG9nKFwiZ2V0VXNlcklkIGNhbGxlZCAoY2xpZW50LXNpZGUpLCBjb29raWVzOlwiKTtcclxuICAgIGNvbnN0IGNvb2tpZSA9IHBhcnNlKGRvY3VtZW50LmNvb2tpZSk7XHJcbiAgICB0b2tlbiA9IGNvb2tpZS50b2tlbjtcclxuICB9IGVsc2UgaWYgKHJlcXVlc3QpIHtcclxuICAgIGNvbnNvbGUubG9nKFwiZ2V0VXNlcklkIGNhbGxlZCAoc2VydmVyLXNpZGUpLCBjb29raWVzOlwiKTtcclxuICAgIGNvbnN0IGNvb2tpZUhlYWRlciA9IHJlcXVlc3QuaGVhZGVycy5nZXQoXCJjb29raWVcIik7XHJcbiAgICBjb25zdCBjb29raWUgPSBjb29raWVIZWFkZXIgPyBwYXJzZShjb29raWVIZWFkZXIpIDoge307XHJcbiAgICB0b2tlbiA9IGNvb2tpZS50b2tlbjtcclxuICB9IGVsc2Uge1xyXG4gICAgY29uc29sZS5sb2coXCJnZXRVc2VySWQgY2FsbGVkIChzZXJ2ZXItc2lkZSksIG5vIHJlcXVlc3Qgb2JqZWN0IHByb3ZpZGVkXCIpO1xyXG4gICAgcmV0dXJuIG51bGw7XHJcbiAgfVxyXG5cclxuICBpZiAoIXRva2VuKSB7XHJcbiAgICBjb25zb2xlLmxvZyhcIk5vIHRva2VuIGZvdW5kXCIpO1xyXG4gICAgcmV0dXJuIG51bGw7XHJcbiAgfVxyXG5cclxuICB0cnkge1xyXG4gICAgY29uc3QgZGVjb2RlZCA9IGp3dERlY29kZTxEZWNvZGVkVG9rZW4+KHRva2VuKTtcclxuICAgIGNvbnNvbGUubG9nKFwiRGVjb2RlZCB0b2tlbjpcIiwgZGVjb2RlZCk7XHJcbiAgICByZXR1cm4gZGVjb2RlZC51c2VySWQ7IC8vIFJldHVybiB0aGUgdXNlcklkIGZyb20gdGhlIEpXVCBwYXlsb2FkXHJcbiAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvciBkZWNvZGluZyB0b2tlbiBpbiBnZXRVc2VySWQ6XCIsIGVycm9yKTtcclxuICAgIHJldHVybiBudWxsO1xyXG4gIH1cclxufTsiXSwibmFtZXMiOlsicGFyc2UiLCJqd3REZWNvZGUiLCJnZXRFbWFpbCIsImNvbnNvbGUiLCJsb2ciLCJkb2N1bWVudCIsImNvb2tpZSIsInRva2VuIiwiZGVjb2RlZCIsImVtYWlsIiwidXNlcm5hbWUiLCJ1c2VySWQiLCJpbWFnZSIsImVycm9yIiwiZ2V0VXNlcklkIiwicmVxdWVzdCIsImNvb2tpZUhlYWRlciIsImhlYWRlcnMiLCJnZXQiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/authenticate.ts\n"));

/***/ })

});