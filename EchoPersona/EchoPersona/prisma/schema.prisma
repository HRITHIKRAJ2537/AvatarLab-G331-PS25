generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model avatar {
  id           Int    @id(map: "avatars_pkey") @default(autoincrement())
  name         String @db.VarChar(255)
  gender       String @db.VarChar(50)
  video_path   String @db.VarChar(1000)
  video_object Int?   @db.Oid
  video_data   Bytes?
}

model person_files {
  file_id     Int       @id @default(autoincrement())
  person_id   Int?
  file_type   String    @db.VarChar(10)
  file_data   Bytes?
  file_name   String?   @db.VarChar(255)
  uploaded_at DateTime? @default(now()) @db.Timestamp(6)
  persons     persons?  @relation(fields: [person_id], references: [person_id], onDelete: Cascade, onUpdate: NoAction)

  @@index([person_id], map: "idx_person_files_person_id")
  @@index([file_type], map: "idx_person_files_type")
}

model persons {
  person_id    Int            @id @default(autoincrement())
  name         String         @unique @db.VarChar(255)
  person_files person_files[]
}

model user_response_videos {
  id                  Int       @id @default(autoincrement())
  user_id             String    @db.VarChar(24)
  username            String    @db.VarChar(50)
  voice_audio_input   String    @db.VarChar(100)
  response_video_path String?   @db.VarChar(255)
  created_at          DateTime? @default(now()) @db.Timestamp(6)
  audio_file_path     String?   @db.VarChar(255)
}

model images {
  id       Int    @id @default(autoincrement())
  category String @db.VarChar(100)
  name     String @db.VarChar(255)
  file     Bytes
}
